// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc250.Stronghold2016;

import com.kauailabs.navx.frc.AHRS;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.vision.USBCamera;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon drivetrainleft1;
    public static CANTalon drivetrainleft2;
    public static CANTalon drivetrainright1;
    public static CANTalon drivetrainright2;
    public static SpeedController rollerrollerMotor;
    public static CANTalon intakeArmarmMotor;
    public static DigitalInput rollersinnerPhotoGate;
    public static DigitalInput rollersouterPhotoGate;
    public static SpeedController defenseArmarmMotor;
    public static DigitalInput defenseArmtopLimit;
    public static PowerDistributionPanel miscellanypdp;
    public static CANTalon shooterflywheelMotor;
    public static CANTalon shooterdeflectorMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static AHRS miscellanyPurpleSensor;
	public static USBCamera frontCamera, backCamera;
	public static int defenseArmChannel, deflectorChannel;
	
	
	public static void init() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainleft1 = new CANTalon(1);
        LiveWindow.addActuator("Drivetrain", "left1", drivetrainleft1);
        
        drivetrainleft2 = new CANTalon(11);
        LiveWindow.addActuator("Drivetrain", "left2", drivetrainleft2);
        
        drivetrainright1 = new CANTalon(2);
        LiveWindow.addActuator("Drivetrain", "right1", drivetrainright1);
        
        drivetrainright2 = new CANTalon(12);
        LiveWindow.addActuator("Drivetrain", "right2", drivetrainright2);
        
        rollerrollerMotor = new Victor(0);
        LiveWindow.addActuator("Intake", "rollerMotor", (Victor) rollerrollerMotor); 
        
        intakeArmarmMotor = new CANTalon(5);
        LiveWindow.addActuator("Intake", "armMotor", intakeArmarmMotor);
        
        rollersinnerPhotoGate = new DigitalInput(1);
        LiveWindow.addSensor("Intake", "innerPhotoGate", rollersinnerPhotoGate); /* COMP: calibrate photogates */
        
        rollersouterPhotoGate = new DigitalInput(3);
        LiveWindow.addSensor("Intake", "outerPhotoGate", rollersouterPhotoGate);
        
        defenseArmarmMotor = new Victor(1);
        LiveWindow.addActuator("DefenseArm", "armMotor", (Victor) defenseArmarmMotor);
        
        defenseArmtopLimit = new DigitalInput(0);
        LiveWindow.addSensor("DefenseArm", "topLimit", defenseArmtopLimit);
        
        miscellanypdp = new PowerDistributionPanel(0);
        LiveWindow.addSensor("Miscellany", "pdp", miscellanypdp);
        
        shooterflywheelMotor = new CANTalon(3);
        LiveWindow.addActuator("Shooter", "flywheelMotor", shooterflywheelMotor);
        
        shooterdeflectorMotor = new CANTalon(4);
        LiveWindow.addActuator("Shooter", "deflectorMotor", shooterdeflectorMotor);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		miscellanyPurpleSensor = new AHRS(
				SerialPort.Port.kMXP); /*
										 * Alternatives: SPI.Port.kMXP,
										 * I2C.Port.kMXP or SerialPort.Port.kUSB
										 */
		frontCamera = new USBCamera("cam0");
		backCamera = new USBCamera("cam1");
	}
}
