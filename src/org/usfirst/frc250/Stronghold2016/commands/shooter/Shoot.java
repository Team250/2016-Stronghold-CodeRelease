// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc250.Stronghold2016.commands.shooter;

import org.usfirst.frc250.Stronghold2016.Constant;
import org.usfirst.frc250.Stronghold2016.commands.rollers.PushBallToFlywheel;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class Shoot extends CommandGroup {

	/**
	 * Spins up the flywheel and moves the ball up to shoot. Assign to a button,
	 * when pressed.
	 */
	public Shoot(boolean isNear, boolean isDashboard) {
		// Add Commands here:
		// e.g. addSequential(new Command1());
		// addSequential(new Command2());
		// these will run in order.

		// To run multiple commands at the same time,
		// use addParallel()
		// e.g. addParallel(new Command1());
		// addSequential(new Command2());
		// Command1 and Command2 will run in parallel.

		// A command group will require all of the subsystems that each member
		// would require.
		// e.g. if Command1 requires chassis, and Command2 requires arm,
		// a CommandGroup containing them would require both the chassis and the
		// arm
		addSequential(new DeflectorToPositionWithOvershoot(isNear, isDashboard));
		addSequential(new SpinFlywheelUntilSpeed(
				isNear ? Constant.kFLYWHEEL_NEAR_SPEED.get() : Constant.kFLYWHEEL_FAR_SPEED.get()));
		addSequential(new PushBallToFlywheel(), Constant.kSECONDS_TO_MOVE_BALL_TO_FLYWHEEL.get());
		addSequential(new StopFlywheel());
	}

	public Shoot() {
		this(false, false);
	}

	public Shoot(boolean isNear) {
		this(isNear, false);
	}
}
